#include <RcppArmadillo.h>
using namespace Rcpp;

//' Fast column/row sums of sparse submatrix view
//'
//' @param X Armadillo sparse matrix
//' @param idx Vector of row or column indices (1-index)
//' @param dim Dimensions (R conventon) along which to compute sums (1: `rowSums()`, 2: `colSums()`;)
//' @param threads Threads to use for parallel subsetting and summation. Quickly depreciating (<=4 recommended)
//'
//' @return R vector or column/row sums.
// [[Rcpp::export]]
// NumericVector C_fastSpMatViewSum(arma::sp_mat X, arma::vec idx, int dim = 2, int threads = 1)
// {

//     idx = idx - 1;
//     NumericVector out;

//     if (dim == 2)
//     {
//         arma::rowvec sum_vec = arma::zeros<arma::rowvec>(X.n_cols);

//         #pragma omp parallel for num_threads(threads)
//         for (int i = 0; i < idx.n_elem; i++)
//         {
//             sum_vec += X.row(idx(i));
//         }
//         out = NumericVector(sum_vec.begin(), sum_vec.end());
//     }
//     else
//     {
//         arma::colvec sum_vec = arma::zeros(X.n_rows);

//         #pragma omp parallel for num_threads(threads)
//         for (int i = 0; i < idx.n_elem; i++)
//         {
//             sum_vec += X.col(idx(i));
//         }
//         out = NumericVector(sum_vec.begin(), sum_vec.end());
//     }

//     return (out);
// }
